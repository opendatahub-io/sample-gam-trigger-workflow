name: Trigger GAM with GH CLI

on:
  workflow_dispatch: {}

env:
  COMPONENT: "Dashboard"
  # Should this be set as organization secret?
  GAM_WORKFLOW_OWNER: "red-hat-data-services"
  GAM_WORKFLOW_REPO: "Gated-Auto-Merger"
  # gh workflow list --repo <OWNER>/<REPO> --json id,name,path,state
  # Note: Workflow ID Changes if the workflow file is renamed
  GAM_WORKFLOW_ID: "105878328"
  WATCH_INTERVAL_SECONDS: "10"

jobs:
  trigger-gam:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.PRIVATE_KEY }}
        owner: ${{ env.GAM_WORKFLOW_OWNER }}
        repositories: ${{ env.GAM_WORKFLOW_REPO }}

    - name: Get GitHub App User ID
      id: get-user-id
      run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}

    # Required because variable substituion isn't happening in gh cli commands.
    - name: Set Env Variable
      run: |
        echo "GAM_TRIGGER_REPOSITORY=$GITHUB_REPOSITORY" | tee -a $GITHUB_ENV
        echo "GAM_TRIGGER_RUN_ID=$GITHUB_RUN_ID" | tee -a $GITHUB_ENV
        echo "EXECUTION_ID=$(date +"%d%m%y%H%M%S%6N")" | tee -a $GITHUB_ENV


    - name: Trigger GAM
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        gh workflow run ${{ env.GAM_WORKFLOW_ID }} --repo ${{ env.GAM_WORKFLOW_OWNER }}/${{ env.GAM_WORKFLOW_REPO }} \
                  --ref main \
                  --field component=${{ env.COMPONENT }} \
                  --field gam_trigger_repository=${{ env.GAM_TRIGGER_REPOSITORY }} \
                  --field gam_trigger_run_id=${{ env.GAM_TRIGGER_RUN_ID }} \
                  --field execution_id=${{ env.EXECUTION_ID }}

    - name: Fetch GAM Workflow Run details
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        sleep 5  # Wait for 5 seconds
        
        # Fetch the triggered workflow details
        workflow_details=$(gh run list --repo ${{ env.GAM_WORKFLOW_OWNER }}/${{ env.GAM_WORKFLOW_REPO }} \
                             --workflow ${{ env.GAM_WORKFLOW_ID }} \
                             --json name,databaseId,url,workflowDatabaseId,workflowName,conclusion,createdAt,displayTitle,status \
                             --jq 'map(select(.name | contains("${{ env.COMPONENT }}-${{ env.EXECUTION_ID }}")))')
                             
        # Print the output to the screen
        echo "Workflow details: $(echo "$workflow_details" | jq '.')"
    
        # Exit if more than one workflow detail exists
        if [ $(echo "$workflow_details" | jq 'length') -gt 1 ]; then
          echo "Error: More than one workflow detail found." && exit 1
        fi

        # Extract Details
        workflow_run_id=$(echo "$workflow_details" | jq '.[0].databaseId')
        workflow_run_name=$(echo "$workflow_details" | jq '.[0].name')
        workflow_run_url=$(echo "$workflow_details" | jq '.[0].url')
    
        # Save the details as GitHub Actions Env Variables
        echo "workflow_run_id=$workflow_run_id" >> $GITHUB_ENV
        echo "workflow_run_name=$workflow_run_name" >> $GITHUB_ENV
        echo "workflow_run_url=$workflow_run_url" >> $GITHUB_ENV
    
    - name: Watch Workflow Progress
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        gh run watch --repo ${{ env.GAM_WORKFLOW_OWNER }}/${{ env.GAM_WORKFLOW_REPO }} ${{ env.workflow_run_id }} --interval ${{ env.WATCH_INTERVAL_SECONDS }}
        printf "\n"
        echo "==============================================================================================================="
        echo " Workflow Run Complete!"
        echo "==============================================================================================================="
        echo "Workflow Name: ${{ env.workflow_run_name }}"
        echo "To view complete logs, click ${{ env.workflow_run_url }}"
        echo "To view the execution metadata, click https://github.com/${{ env.GAM_WORKFLOW_OWNER }}/${{ env.GAM_WORKFLOW_REPO }}/tree/metadata/executions/${{ env.COMPONENT }}/${{ env.EXECUTION_ID }}
